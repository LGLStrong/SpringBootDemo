#com.didispace.blog.name=TestName
#com.didispace.blog.title=Spring Boot\u6559\u7A0B

#set custom port number ,if the number is 0 ,Tomcat will use random port number while starting the Spring boot applications
#server.port = 9090  

##Configure HTTPS
#server.port: 443
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: springboot
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

#Eureka config
spring.application.name=demo
server.port = 8090
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
local.server.port = 8090
management.server.port = 9001



#redis
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
#spring.redis.password=
#spring.redis.database=0
#spring.redis.pool.max-active=8 
#spring.redis.pool.max-idle=8 
#spring.redis.pool.max-wait=-1 
#spring.redis.pool.min-idle=0 
#spring.redis.timeout=0


#database
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop
## this shows the sql actions in the terminal logs
spring.jpa.show-sql=true